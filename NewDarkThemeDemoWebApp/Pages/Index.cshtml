@page
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}

<div class="container">
	<div class="text-center">
		<h1 class="display-1">Visual Studio 2022</h1>
		<p class="lead">Designing for everyone</p>
	</div>
	<div>
		<h2 class="lead">Visual Studio 2022 is clearly modern, and clearly Microsoft.</h2>
		<p>We know that making extensive, noticeable updates to how the product looks and feels makes it easier for developers to know when they’re using the new product. From the product icon in menus, to marketing stories about the new release, to the splash and welcome screen, to the UI (theming and iconography) itself, establishing a recognizable style and theme to these updates facilitates wayfinding for developers who use multiple versions of the product at the same time.</p>
		<p class="text-center">
			​<img src="./images/splash-screen-app-icon.png" class="img-fluid" alt="Splash screen and app icon">
		</p>
		<p>How we develop that recognizable visual language matters, and we’ve taken advantage of opportunities to align more closely to the Microsoft brand, especially Microsoft’s signature Fluent look and feel . Making this subtle but important shift showcases Visual Studio’s position as the best-in-class tool for developers and make sure customers can feel confident and secure that this release has the power of Microsoft behind it.</p>
	</div>
	<div>
		<h2>Intuitive yet familiar iconography supporting improved efficiency and flow.</h2>
		<p>For years, we’ve consistently heard from you that Visual Studio feels less modern than our competition. We also hear customers say they find our product user interface overwhelming, complex – even daunting. Yet, we’re keenly aware that even seemingly small changes in iconography can have a significant impact on the day-to-day flow for existing users. So, we started by asking developers like you simple questions: What works about these icons today? What could be better? No matter how much experience they had with Visual Studio, we got the same comments over and over: Change is OK as long as it doesn’t alter meaning. Meaningful and consistent color usage makes it easier to recognize and understand. Sharp contrast and a recognizable silhouette are essential for legibility. We turned what you care about into principles and, ultimately, acceptance criteria for our work: consistency, legibility, and familiarity.</p>
		<div>
			<table class="table table-dark table-borderless">
				<thead>
					<tr>
						<th scope="col">Consistency</th>
						<th scope="col">Legibility</th>
						<th scope="col">Familiarity</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td width="33%">​<img src="./images/icon-refresh-consistency.png" class="img-fluid" alt="Icon refresh - Consistency"></td>
						<td width="33%">​<img src="./images/icon-refresh-legibility.png" class="img-fluid" alt="Icon refresh - Legibility"></td>
						<td width="33%">​<img src="./images/icon-refresh-familiarity.png" class="img-fluid" alt="Icon refresh - Familiarity"></td>
					</tr>
					<tr>
						<td>
							<ul>
								<li>
									Placing the pen / “edit” modifier in a predictable place, lower right
								</li>
								<li>
									Choosing between “filled” and “open” styles
								</li>
							</ul>
						</td>
						<td>
							<ul>
								<li>
									Using color to align and clarify real-world reference points
								</li>
								<li>
									Leveraging what we know about contrast and accessibility to make each element recognizable to all audiences.
								</li>
							</ul>
						</td>
						<td>
							<ul>
								<li>
									Keeping symbols that have a long tradition of meaning, like the package
								</li>
								<li>
									Preserving color where color is key to findability
								</li>
							</ul>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
		<div class="text-center">
			<figure class="figure">
				<img src="./images/icon-refresh-dark-theme.png" class="figure-img img-fluid rounded" alt="Icon refresh dark theme">
			</figure>
		</div>
		<p>
			So, how is it going? Percentages of developers switching back to old icons after seeing the new ones are in the single digits, and sentiment is largely neutral to positive about the change.
			We started testing this work with users early in the design process, releasing a build to a group of developers whose familiarity with Visual Studio IDE ranged from 6 months to 20+ years. We checked in with them after the first week, the first month, and consistently throughout the process and we’re still working through bugs and fixes today as customers share feedback. So how do we know we hit the mark? After a year of collaboration with you to optimize the icons for our developers’ needs and a month of shipping VS2022 with these icons on by default, survey results indicate a mostly neutral to positive response to using the icons, bugs and defects are less and less frequent and largely addressable, and we’re seeing only a tiny fraction of you reverting back to the old icon set. Keep sending us feedback  and we’ll keep making them better.
		</p>
	</div>
	<div>
		<h2>An updated dark theme that’s easier to see and look at, plus new more accessible font options in editor.</h2>
		<p>In Preview 3, existing dark theme users will see subtle but important updates to their existing theme. We're updating the dark theme with improved accessibility, better alignment with Microsoft design language, and more streamlined color assignment for future personalization features. Over the last year, we’ve seen data showing us that the dark theme has actually replaced light theme as the most popular, and we’ve also seen a growing trend toward dark theme in developer experiences within Microsoft and across the industry. So, as we iterate through preview releases and evaluate feedback, we’re aiming to make the new dark theme the default theme for Visual Studio 2022. Below are a few key details about the theme updates.</p>
		<p>
			<b>Color contrast ratio adjustment.</b> We hold ourselves to high standards for accessibility, so we’re adjusting overall color contrast in order to make the new dark theme accessible for more people. At an initial state, the component borders are now slightly brighter so that users can identify interactable components more easily. When an element is being focused on, the contrast increases further so users can quickly tell the state has changed. The separation between layers and sections is more obvious so that the UI hierarchy is clear.
		</p>
		<div class="text-center">
			<figure class="figure">
				<img src="./images/dark-theme-color-contrast-adjustment.png" class="figure-img img-fluid rounded" alt="The difference between parts and states is more obvious in the new dark theme.">
				<figcaption class="figure-caption text-white-50">The difference between parts and states is more obvious in the new dark theme. </figcaption>
			</figure>
		</div>
		<p><b>New accent color.</b> On hearing feedback from you that the current highlight color gives a spotlight effect that feels glaring in a mostly dark theme environment, we decided to make the accent color less intense, and to use it more sparingly in order to reduce distraction and eyestrain. The new accent color now matches the latest product visual identity, which helps users quickly find the right window when they are navigating among multiple tools such as Visual Studio Code.</p>
		<div class="text-center">
			<figure class="figure">
				<img src="./images/dark-theme-new-accent-color.png" class="figure-img img-fluid rounded" alt="The accent color is less intense and used more sparingly in the new dark theme.">
				<figcaption class="figure-caption text-white-50">The accent color is less intense and used more sparingly in the new dark theme.</figcaption>
			</figure>
		</div>
	</div>
</div>

